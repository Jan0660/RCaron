name: rcaron

on: [ push, pull_request ]

jobs:
  rcaron-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: restore
        run: dotnet restore RCaron
      - name: build
        run: dotnet build RCaron --no-restore
  rcaron-test:
    needs: rcaron-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: restore
        run: dotnet restore RCaron.Tests
      - name: build
        run: dotnet build RCaron.Tests --no-restore
      - name: test
        run: dotnet test RCaron.Tests --no-build
  rcaron-jit-build:
    needs: rcaron-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: restore
        run: dotnet restore RCaron.Jit
      - name: build
        run: dotnet build RCaron.Jit --no-restore
  rcaron-jit-test:
    needs: rcaron-jit-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: restore
        run: dotnet restore RCaron.Jit.Tests
      - name: build
        run: dotnet build RCaron.Jit.Tests --no-restore
      - name: test
        run: dotnet test RCaron.Jit.Tests --no-build
  cli-build:
    needs: rcaron-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: restore
        run: dotnet restore RCaron.Cli
      - name: build
        run: dotnet build RCaron.Cli --no-restore
  language-server-build:
    needs: rcaron-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: restore
        run: dotnet restore RCaron.LanguageServer
      - name: build
        run: dotnet build RCaron.LanguageServer --no-restore
  benchmarks-build-and-check:
    needs: rcaron-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: restore
        run: dotnet restore RCaron.Benchmarks
      - name: build
        run: dotnet build RCaron.Benchmarks --no-restore
      - name: check
        run: dotnet run --project RCaron.Benchmarks --no-build -- checkAllWork
  shell-build:
    needs: rcaron-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: restore
        run: dotnet restore RCaron.Shell
      - name: build
        run: dotnet build RCaron.Shell --no-restore
  shell-test:
    needs: shell-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: restore
        run: dotnet restore RCaron.Shell.Tests
      - name: build
        run: dotnet build RCaron.Shell.Tests --no-restore
      - name: test
        run: dotnet test RCaron.Shell.Tests --no-build
  shell-nuget-release:
    needs: shell-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: pack
        run: dotnet pack RCaron.Shell -c release
      - name: push
        if: startsWith(github.ref, 'refs/tags/')
        run: dotnet nuget push ./RCaron.Shell/bin/nupkg/*.nupkg -k ${NUGET_KEY} -s https://api.nuget.org/v3/index.json
        env:
          NUGET_KEY: ${{ secrets.NUGET_KEY }}